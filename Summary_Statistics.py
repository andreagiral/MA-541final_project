# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1We5sZQyRFy3TFpuVlrmc6RQpGoPhXMg6
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from tabulate import tabulate

original_data = pd.read_csv('/content/surv_variants_cleaned.csv')

#generate summary statistics
def generate_summary_statistics_limited(df):
    summary = {}

    #statistics for Numerical Columns and droping 'first_seq' and 'last_seq' columns
    numerical_columns = df.select_dtypes(include=['number']).drop(columns=['first_seq', 'last_seq'], errors='ignore')
    summary['Descriptive Statistics'] = numerical_columns.describe().round(3)

    # unique count
    unique_values = pd.DataFrame({
        'Metric': ['Countries', 'Variants', 'Continents'],
        'Unique Count': [df['Country'].nunique(), df['variant'].nunique(), df['Continent'].nunique()]
    })

    summary['Unique Values'] = unique_values

    return summary

# generate summary statistics
summary_statistics = generate_summary_statistics_limited(original_data)


print("\n Descriptive Statistics:")
print(tabulate(summary_statistics['Descriptive Statistics'], headers='keys', tablefmt='pretty'))

print("\n Unique Values:")
print(tabulate(summary_statistics['Unique Values'], headers='keys', tablefmt='pretty'))

# top 10 countries with the highest number of cases
top_10_cases = original_data.groupby('Country')['total_cases'].sum().nlargest(10).reset_index()
top_10_cases['total_cases'] = top_10_cases['total_cases'].astype(int).apply(lambda x: f"{x:,}")

# top 10 countries with the highest number of deaths
top_10_deaths = original_data.groupby('Country')['total_deaths'].sum().nlargest(10).reset_index()
top_10_deaths['total_deaths'] = top_10_deaths['total_deaths'].astype(int).apply(lambda x: f"{x:,}")

print("\n Top 10 Countries by Total Cases:")
print(tabulate(top_10_cases, headers='keys', tablefmt='pretty', numalign="right"))

print("\n Top 10 Countries by Total Deaths:")
print(tabulate(top_10_deaths, headers='keys', tablefmt='pretty', numalign="right"))

# top 10 variants with the longest duration
top_10_longest_duration = original_data.groupby('variant')['duration'].max().nlargest(10).reset_index()
top_10_longest_duration['duration'] = top_10_longest_duration['duration'].astype(int)

#top 10 variants with the shortest duration
top_10_shortest_duration = original_data.groupby('variant')['duration'].max().nsmallest(10).reset_index()
top_10_shortest_duration['duration'] = top_10_shortest_duration['duration'].astype(int)

#top 10 variants with the highest mortality rates
top_10_highest_mortality = original_data.loc[
    original_data.groupby('variant')['mortality_rate'].idxmax(),
    ['variant', 'mortality_rate', 'total_cases', 'total_deaths']
].nlargest(10, 'mortality_rate')


top_10_highest_mortality['mortality_rate'] = top_10_highest_mortality['mortality_rate'].apply(lambda x: f"{x:.3f}")
top_10_highest_mortality['total_cases'] = top_10_highest_mortality['total_cases'].apply(lambda x: f"{x:,.3f}")
top_10_highest_mortality['total_deaths'] = top_10_highest_mortality['total_deaths'].apply(lambda x: f"{x:,.3f}")

# Top 10 variants with the lowest mortality rates
top_10_lowest_mortality = original_data.loc[
    original_data.groupby('variant')['mortality_rate'].idxmax(),
    ['variant', 'mortality_rate', 'total_cases', 'total_deaths']
].nsmallest(10, 'mortality_rate')


top_10_lowest_mortality['mortality_rate'] = top_10_lowest_mortality['mortality_rate'].apply(lambda x: f"{x:.3f}")
top_10_lowest_mortality['total_cases'] = top_10_lowest_mortality['total_cases'].apply(lambda x: f"{x:,.3f}")
top_10_lowest_mortality['total_deaths'] = top_10_lowest_mortality['total_deaths'].apply(lambda x: f"{x:,.3f}")


print("\n Top 10 Variants with Longest Duration:")
print(tabulate(top_10_longest_duration, headers='keys', tablefmt='pretty'))

print("\n Top 10 Variants with Shortest Duration:")
print(tabulate(top_10_shortest_duration, headers='keys', tablefmt='pretty'))

print("\n Top 10 Variants with Highest Mortality Rates:")
print(tabulate(top_10_highest_mortality, headers='keys', tablefmt='pretty'))

print("\n Top 10 Variants with Lowest Mortality Rates:")
print(tabulate(top_10_lowest_mortality, headers='keys', tablefmt='pretty'))

#mean duration by variant
mean_duration_by_variant = original_data.groupby('variant')['duration'].mean().reset_index()
mean_duration_by_variant = mean_duration_by_variant.sort_values(by='duration', ascending=False)

# chart plot
fig, ax = plt.subplots(figsize=(10, 12))
y_positions = range(len(mean_duration_by_variant))
ax.barh(y_positions, mean_duration_by_variant['duration'], color='skyblue', edgecolor='black', align='center')

# formatting the plot
ax.set_yticks(y_positions)
ax.set_yticklabels(mean_duration_by_variant['variant'])  # Show labels on the left

ax.set_xlabel("Mean Duration in Days")
ax.set_title("Mean Duration of COVID-19 Variants")

ax.invert_yaxis()
ax.grid(axis='x', linestyle='--', alpha=0.7)

plt.show()
